{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","sendRequest","tail","a","fetch","response","json","data","Error","getMovieByTitle","movieTitle","FindMovie","addNewMovie","useState","title","setTitle","loadedMovie","setLoadedMovie","searchMovieError","setSearchMovieError","changedTitle","isTitleChanged","loadMovie","movieFromServer","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","App","setMovies","find","film","isMovieInList","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7e21e7a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">\n              {movie.Title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=bc0a60f1&t=';\n\nconst sendRequest = async (tail: string) => {\n  try {\n    const response = await fetch(BASE_URL + tail);\n\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw new Error(`${error}`);\n  }\n};\n\nexport const getMovieByTitle = async (movieTitle: string) => {\n  const movie = await sendRequest(movieTitle);\n\n  if (movie.Error) {\n    throw new Error(`${movie.Error}`);\n  }\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovieByTitle } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addNewMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addNewMovie } = props;\n  const [title, setTitle] = useState('');\n  const [loadedMovie, setLoadedMovie] = useState<Movie | null>(null);\n  const [searchMovieError, setSearchMovieError] = useState(false);\n  const [changedTitle, isTitleChanged] = useState(false);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (loadedMovie) {\n      addNewMovie(loadedMovie);\n    }\n\n    setTitle('');\n    setSearchMovieError(false);\n    isTitleChanged(false);\n  }\n\n  const loadMovie = async () => {\n    try {\n      const movieFromServer = await getMovieByTitle(title);\n\n      setLoadedMovie(movieFromServer);\n      setSearchMovieError(false);\n    } catch {\n      setLoadedMovie(null);\n      setSearchMovieError(true);\n      isTitleChanged(false);\n    }\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    isTitleChanged(true);\n\n    return setTitle(value);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn(\n                  'input',\n                  { 'is-danger': (searchMovieError && !changedTitle) },\n                )}\n                value={title}\n                onChange={inputHandler}\n              />\n            </div>\n          </label>\n          {(searchMovieError && !changedTitle) && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {loadedMovie && (<MovieCard movie={loadedMovie} />)}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const isMovieInList = (movie: Movie) => {\n    return movies.find(film => film.imdbID === movie.imdbID);\n  };\n\n  const addMovies = (movie: Movie) => {\n    if (!isMovieInList(movie)) {\n      setMovies(prevState => [...prevState, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}